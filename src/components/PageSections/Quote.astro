---
import type { Quote } from "../../types";
import RichContent from "../RichContent.astro";
import ButtonLink from "../ButtonLink.astro";
import buildHref from "../../utils/buildHref";
import urlFor from "../../lib/sanity.urlForImage";
import { Image } from "astro:assets";
import "../../styles/rich-content.css";

type Props = {
  content?: Quote;
};

const { content } = Astro.props;
---

<article class="quote-section | content-wrapper">
  <div class="grid-wrapper">
    <div class="grid">
      <div class="rich-content quote">
        <RichContent content={content?.blocks} />
        <div class="attribution">
          <p class="small-title">{`â€”${content?.attribution?.name}`}</p>
          <p>{content?.attribution?.title}</p>
        </div>
      </div>
      {
        content?.featuredLink && (
          <div class="link | flow">
            <img src="/crane-circle.svg" width={150} height={150} />
            <p class="italic">{content.featuredLink.description}</p>
            <ButtonLink
              theme="ghost"
              linkObject={content.featuredLink.linkObject!}
              withArrow
            />
          </div>
        )
      }
    </div>
  </div>
  <img class="fist-left" src="/fist-left.svg" alt="" width="200" height="260" />
  <img
    class="fist-right"
    src="/fist-right.svg"
    alt=""
    width="200"
    height="260"
  />
  {
    content?.image && (
      <Image
        class="bg-image lqip-preview"
        src={urlFor(content.image).width(1200).height(675).auto("format").url()}
        alt=""
        width={1200}
        height={675}
        format="webp"
        style={`background-image: url(${content.image.asset.metadata.lqip})`}
      />
    )
  }
</article>

<style>
  article {
    position: relative;
    margin-block: var(--section-spacer);
    /* margin-inline: var(--gutter); */
  }

  :is(.fist-left, .fist-right) {
    position: absolute;
    z-index: -1;
    height: 200px;
    opacity: 0.6;
    top: -180px;
  }

  .fist-left {
    left: 3rem;
    transform: rotate(-15deg);
  }

  .fist-right {
    right: 3rem;
    transform: rotate(15deg);
  }

  .grid-wrapper {
    border-radius: var(--rounded-corners-small);
    background: var(--color-background-gradient);
    color: var(--color-primary-light);
  }

  .grid {
    position: relative;
    z-index: 2;
    display: grid;
    grid-template-columns: 1fr 0.5fr;
    gap: 2rem;
    padding: 4rem;
    /* margin-inline: calc(var(--gutter) * -1); */

    & .link {
      place-self: center;
      align-items: center;
    }
  }

  .attribution {
    margin-block-start: 3rem;

    & p:last-of-type {
      margin-top: 0.25rem;
      font-style: italic;
      font-size: var(--step--1);
      opacity: 0.7;
    }
  }

  .bg-image {
    filter: saturate(0);
    mix-blend-mode: multiply;
    opacity: 0.6;
    border-radius: var(--rounded-corners-small);
    width: calc(100% - var(--gutter) * 2);
    margin-inline: auto;
  }

  :global(.quote) {
    --rule-width: 100%;
  }

  :global(.quote .highlight) {
    position: relative;
    display: inline;
  }

  :global(.quote .highlight::before) {
    content: "";
    position: absolute;
    bottom: 0.25rem;
    z-index: -1;
    opacity: 0.8;
    height: 30%;
    width: var(--rule-width);
    background: var(--color-accent-base);
  }

  @media (max-width: 999px) {
    .grid {
      grid-template-columns: 1fr 0.25fr;
      padding: 2rem;
    }

    :is(.fist-left, .fist-right) {
      height: 120px;
      opacity: 0.25;
      top: -100px;
    }

    .fist-left {
      left: 1rem;
    }

    .fist-right {
      right: 1rem;
    }
  }

  @media (max-width: 849px) {
    .grid {
      grid-template-columns: 1fr;
    }
  }

  @media (max-width: 768px) {
    .grid {
      & .link {
        place-self: flex-start;
        align-items: flex-start;
      }
    }

    .fist-left {
      left: auto;
      right: 5rem;
    }

    .fist-right {
      right: -1rem;
    }
  }

  @media (max-width: 640px) {
    .grid {
      padding: 1.5rem;
    }

    :global(.quote .highlight) {
      position: relative;
      display: inline;
    }
  }

  @media (max-width: 400px) {
    :is(.fist-left, .fist-right) {
      height: 90px;
      opacity: 0.25;
      top: -70px;
    }
  }
</style>
