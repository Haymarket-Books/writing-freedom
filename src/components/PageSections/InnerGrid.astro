---
import { Image } from "astro:assets";
import type { Grid } from "../../types";
import ButtonLink from "../ButtonLink.astro";
import urlFor from "../../lib/sanity.urlForImage";

type Props = {
  content?: Grid;
};

const { content } = Astro.props;
---

<section class="content-wrapper" id={content?.slug}>
  <h2 class="center-all with-mark">{content?.title}</h2>
  <div class="responsive-grid">
    {
      content?.items?.map((item, idx) => {
        return (
          <article class="flow">
            {item.image && (
              <img
                src={`/icon-illustration-${idx + 1}.svg`}
                width="24"
                height="24"
                alt=""
              />
              // <Image
              //   src={urlFor(item?.image)
              //     .width(400)
              //     .height(400)
              //     .auto("format")
              //     .url()}
              //   alt={item.image.alt || ""}
              //   width={400}
              //   height={400}
              //   format="webp"
              // />
            )}
            {item.heading && <h3>{item.heading}</h3>}
            <p>{item.text}</p>
            {item.linkObject && (
              <ButtonLink linkObject={item?.linkObject} withArrow />
            )}
          </article>
        );
      })
    }
  </div>
</section>

<style>
  section {
    margin-block: var(--section-spacer);
  }

  h2 {
    font-size: var(--step-2);

    &::before {
      left: 50% !important;
      transform: translateX(-50%);
    }
  }

  h3 {
    font-size: var(--step-1);
  }

  .responsive-grid {
    --item-min-width: 12rem;
    --grid-gap: var(--space-m);
    margin-block-start: calc(var(--section-spacer) * 0.5);
  }

  article {
    &.flow {
      --flow-space: 1rem;
    }

    & img {
      height: 3rem;
      width: 3rem;
    }
  }
</style>
