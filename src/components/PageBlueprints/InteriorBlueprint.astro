---
import type {
  PagePayload,
  Hero,
  Grid,
  Emphasis,
  Presentation,
  RichContent,
  Quote,
  FAQ,
  Index,
  LinkCTA,
  CTA,
  PageNavigation,
} from "../../types/index";
import InnerHeroSection from "../PageSections/InnerHero.astro";
import InnerGridSection from "../PageSections/InnerGrid.astro";
import EmphasisSection from "../PageSections/Emphasis.astro";
import PresentationSection from "../PageSections/Presentation.astro";
import IndexSection from "../PageSections/IndexSection.astro";
import SponsorsSection from "../PageSections/Sponsors.astro";
import FAQSection from "../PageSections/FAQSection.astro";
import QuoteSection from "../PageSections/Quote.astro";
import LinkCTASection from "../PageSections/LinkCTA.astro";
import CallToActionSection from "../PageSections/CallToAction.astro";
import RichContentSection from "../PageSections/RichContent_Section.astro";
import buildPageNav from "../../utils/buildPageNav";
import type { PortableTextBlock } from "sanity";

type Props = {
  page: PagePayload;
};

const { page } = Astro.props;

const pageNavigation: PageNavigation = buildPageNav(page.content);
---

<Fragment>
  {
    page.content.map((section, idx) => {
      switch (section.type) {
        case "hero":
          return (
            <InnerHeroSection
              content={section as Hero}
              navigation={pageNavigation}
            />
          );
        case "grid":
          return <InnerGridSection content={section as Grid} />;
        case "sponsors":
          return <SponsorsSection content={section as Grid} />;
        case "presentation":
          return <PresentationSection content={section as Presentation} />;
        case "emphasis":
          return <EmphasisSection content={section as Emphasis} />;
        case "quote":
          return <QuoteSection content={section as Quote} />;
        case "richContent":
          return <RichContentSection content={section as RichContent} />;
        case "faq":
          return <FAQSection content={section as FAQ} />;
        case "index":
          return <IndexSection content={section as Index} />;
        case "linkCTA":
          return <LinkCTASection content={section as LinkCTA} />;
        case "cta":
          return <CallToActionSection content={section as CTA} />;
        default:
          return null;
      }
    })
  }
</Fragment>
<!-- <h1>{page.title}</h1>
<p>{page.slug}</p>
<article>
  {
    page.content.map((section) => (
      <div>
        <>
          <h2>{section.title || "Section"}</h2>
          <p>{section.type}</p>
        </>
      </div>
    ))
  }
</article> -->
