---
import type {
  PagePayload,
  Fellow,
  FellowshipYear,
  Category,
} from "../../types/index";
import type { PortableTextBlock } from "sanity";
import PersonCard from "../PersonCard.astro";
import FellowsFilters from "../FellowsFilters.astro";
import FilterFellows from "../Svelte/FilterFellows.svelte";
import { SITE_SETTINGS } from "../../lib/defaults";
import { getImage } from "astro:assets";
import urlFor from "../../lib/sanity.urlForImage";

type Props = {
  page: PagePayload;
  content?: Fellow[];
  filterYears?: FellowshipYear[];
  filterCategories?: Category[];
};

const { page, content, filterYears, filterCategories } = Astro.props;

// const contentWithAstroImage = content?.map(async (fellow) => {
//   return {
//     ...fellow,
//     astroImage: await getImage({
//       src: urlFor(fellow.image!).width(400).height(500).url(),
//       alt: fellow?.image?.alt || "",
//       width: 400,
//       height: 500,
//       format: "webp",
//     }),
//   };
// });

// const preparedContent = await Promise.all(contentWithAstroImage!);
// console.log(preparedContent[0].astroImage);
---

<div class="content-wrapper flow">
  <h1 class="with-mark">{page.title}</h1>
  <!-- <FilterFellows
    client:load
    fellows={preparedContent}
    defaultYear={SITE_SETTINGS.defaultFellowshipYear}
  /> -->
  <fellow-filter class="flow">
    <FellowsFilters years={filterYears} categories={filterCategories} />
    <div class="fellows-grid | responsive-grid">
      {
        content?.map((fellow) => {
          return <PersonCard person={fellow} />;
        })
      }
    </div>
  </fellow-filter>
</div>

<style>
  .content-wrapper {
    margin-block: var(--section-spacer);

    &.flow {
      --flow-space: 3rem;
    }
  }

  .responsive-grid {
    /* --grid-gap: 2rem; */
    --item-min-width: 16rem;
    --item-max-width: 18rem;
    grid-row-gap: 4rem;
    grid-column-gap: 2rem;
    /*--item-min-width: 12rem; 
    --item-max-width: 14rem; */
  }
</style>

<script src="../../scripts/components/fellow-filter.js"></script>
