---
import Layout from "../layouts/Layout.astro";
import InteriorBlueprint from "../components/PageBlueprints/InteriorBlueprint.astro";
import IndexBlueprint from "../components/PageBlueprints/IndexBlueprint.astro";
import ContactBlueprint from "../components/PageBlueprints/ContactBlueprint.astro";
import { sanityClient } from "sanity:client";
import {
  pageQuery,
  fellowsIndexQuery,
  fellowshipYearsIndexQuery,
} from "../lib/sanity.queries";
import type { PagePayload, Fellow, FellowshipYear } from "../types";
import generatePageMetadata from "../utils/generatePageMetadata";

export async function getStaticPaths() {
  const pagesList = await sanityClient.fetch<PagePayload[]>(pageQuery, {
    page: "page",
  });

  return pagesList.map((page) => {
    return {
      params: { slug: `${page.slug}` },
      props: { page },
    };
  });
}

const fellows = await sanityClient.fetch<Fellow[]>(fellowsIndexQuery);
const years = await sanityClient.fetch<FellowshipYear[]>(
  fellowshipYearsIndexQuery,
);

type Props = {
  page?: PagePayload;
};

const { page } = Astro.props;
// console.log(page);
const path = Astro.url.pathname;
---

<Layout meta={generatePageMetadata(page?.metadata, page?.title, path)}>
  <main slot="content">
    <>
      {
        () => {
          switch (page?.blueprint) {
            case "interior":
              return <InteriorBlueprint page={page} />;
            case "index":
              return (
                <IndexBlueprint
                  page={page}
                  content={page.slug === "fellows" ? fellows : undefined}
                  filters={page.slug === "fellows" ? years : undefined}
                />
              );
            case "contact":
              return <ContactBlueprint page={page} />;
          }
        }
      }
    </>
  </main>
</Layout>
